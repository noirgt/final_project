{{- range $component, $params := .Values.crawler_components }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $component }}
  labels:
    app: crawler
    component: {{ $component }}
spec:
  ports:
  - port: {{ $params.service_port }}
    protocol: TCP
    targetPort: {{ $params.service_port }}
  selector:
    app: crawler
    component: {{ $component }}
{{- end }}

{{- if .Values.ingress_nginx.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    {{- if .Values.ingress_nginx.tls.enabled }}
    cert-manager.io/cluster-issuer: "letsencrypt"
    {{- end }}
spec:
  {{- if .Values.ingress_nginx.tls.enabled }}
  tls:
    - hosts:
      - ui.{{ default "example.com" .Values.crawler_domain }}
      {{- if .Values.monitoring.enabled }}
      - grafana.{{ default "example.com" .Values.crawler_domain }}
      - prometheus.{{ default "example.com" .Values.crawler_domain }}
      {{- end }}
      secretName: letsencrypt
      {{- end }}
  rules:
    - host: ui.{{ default "example.com" .Values.crawler_domain }}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: ui
              port:
                number: {{ $.Values.crawler_components.ui.service_port }}
    {{- if .Values.monitoring.enabled }}
    - host: grafana.{{ default "example.com" .Values.crawler_domain }}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ .Release.Name }}-grafana
              port:
                number: 80
    - host: prometheus.{{ default "example.com" .Values.crawler_domain }}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ .Release.Name }}-kube-prometheus-st-prometheus
              port:
                number: 9090
    {{- end }}
{{- end }}
